* flutter installation

** macos set java sdk
If already have android studio installed simply run:
#+begin_src sh
# add this into ~/.zshrc file
export JAVA_HOME="/Applications/Android Studio.app/Contents/jbr/Contents/Home"

## install cmd
cd ~/Library/Android/sdk/tools/bin
./sdkmanager --install "cmdline-tools;latest"

## set sdk path
flutter config --android-sdk "/Users/$USER/Library/Android/sdk" & flutter doctor --android-licenses

## check result
flutter doctor
#+end_src
copy from [[https://stackoverflow.com/questions/68236007/i-am-getting-error-cmdline-tools-component-is-missing-after-installing-flutter][cmdline-tools component is missing]]

** archlinux install flutter
#+begin_src sh
pacman -S --needed git base-devel
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si

yay -S flutter

java -version

sudo pacman -S jre8-openjdk

export JAVA_HOME='/usr/lib/jvm/java-8-openjdk'
export PATH=$JAVA_HOME/bin:$PATH


sudo groupadd flutterusers
sudo gpasswd -a $USER flutterusers
sudo chown -R :flutterusers /opt/flutter
sudo chmod -R g+w /opt/flutter/

yay -S android-sdk android-sdk-platform-tools android-sdk-build-tools
yay -S android-platform

sudo groupadd android-sdk
sudo gpasswd -a $USER android-sdk
sudo setfacl -R -m g:android-sdk:rwx /opt/android-sdk
sudo setfacl -d -m g:android-sdk:rwX /opt/android-sdk

sdkmanager --install "system-images;android-29;default;x86"

avdmanager create avd -n <name> -k "system-images;android-29;default;x86"

export ANDROID_SDK_ROOT='/opt/android-sdk'
export PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools/
export PATH=$PATH:$ANDROID_SDK_ROOT/tools/bin/
export PATH=$PATH:$ANDROID_ROOT/emulator
export PATH=$PATH:$ANDROID_SDK_ROOT/tools/


flutter doctor --android-licenses

flutter create new_app
cd new_app
flutter run --debug
#+end_src
copy from [[https://gist.github.com/joaquinicolas/b7d0a0869485bca5156d0d4be87820f4]]

see also [[https://dev.to/awais/configure-flutter-development-environment-on-manjaro-arch-linux-4a0a][Configure Flutter development environment on Manjaro/Arch linux.]]

see also [[https://www.rockyourcode.com/how-to-get-flutter-and-android-working-on-arch-linux/][How to Get Flutter and Android Working on Arch Linux]]


** dart repl package
#+begin_src sh
$ dart pub global activate interactive

$ echo 'export PATH="$HOME/.pub-cache/bin":"$PATH"' >> ~/.zshrc
$ source ~/.zshrc

$ interactive
#+end_src

interactive usage
#+begin_src dart
>>> class A {
...     late int val;
... }
>>> a = A()
Instance of 'A'
>>> a.val = 999;
>>> print(a.val);
999

>>> !pwd
/tmp/dart_interactive_workspace_2022-11-02T145529907367

>>> !ls
lib
pubspec.yaml

>>> !dart pub add crypto
Resolving dependencies...

+ collection 1.17.0
+ crypto 3.0.2
+ typed_data 1.3.1

Changed 3 dependencies!

>>> import 'package:crypto/crypto.dart';
>>> import 'dart:convert';
>>> b = utf8.encode('helloworld');
>>> d = sha1.convert(b);
>>> d
6adfb183a4a2c94a2f92dab5ade762a47889a5a1
#+end_src
copy from [[https://devlights.hatenablog.com/entry/2022/11/04/073000][Flutterメモ-30 (dart の REPL)(interactive)]]

see also [[https://flutterawesome.com/repl-interactive-shell-for-dart-supporting-3rd-party-packages-hot-reload-and-full-grammar/][REPL (interactive shell) for Dart, supporting 3rd party packages, hot reload, and full grammar]]

** flutter download link
#+begin_src sh
wget -c https://mirrors.tuna.tsinghua.edu.cn/flutter/flutter_infra/releases/stable/linux/flutter_linux_3.0.2-stable.tar.xz
wget -c https://mirrors.tuna.tsinghua.edu.cn/flutter/flutter_infra/releases/stable/macos/flutter_macos_3.0.2-stable.zip
wget -c https://mirrors.tuna.tsinghua.edu.cn/flutter/dart-archive/channels/stable/release/2.17.3/sdk/dartsdk-linux-x64-release.zip

## or
## wget -c https://storage.flutter-io.cn/dart-archive/channels/stable/release/2.17.3/sdk/dartsdk-macos-x64-release.zip


wget -c https://storage.flutter-io.cn/flutter_infra/releases/stable/macos/flutter_macos_3.13.8-stable.zip
wget -c https://storage.flutter-io.cn/dart-archive/channels/stable/release/2.17.3/api-docs/dartdocs-gen-api.zip

wget -c https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_3.13.8-stable.zip
wget -c https://storage.googleapis.com/dart-archive/channels/stable/release/2.17.3/api-docs/dartdocs-gen-api.zip
#+end_src

see [[https://mirrors.tuna.tsinghua.edu.cn/flutter]]

get the download link from [[https://dart.dev/tools/sdk/archive][Dart SDK archive]]

get android studio [[https://developer.android.google.cn/studio]]


** pub install package

#+begin_src sh
pub global active package_names
#+end_src

** install flutter in archlinux
#+begin_src sh
sudo pacman -S flutter android-tools kotlin dart android-studio android-emulator android-sdk
sudo gpasswd -a $USER flutterusers
newgrp flutterusers
#+end_src
copy from [[https://dev.to/nabbisen/start-flutter-2-in-arch-linux-4ab6][Start Flutter 2 in Arch Linux]]

** flutter cmd usage
#+begin_src sh
## detector the fluter environment
flutter doctor

## update flutter sdk
flutter upgrade

## get the packages
flutter packages get

## update the packages
flutter packages upgrade

## create flutter application
flutter create --no-pub my_app

## get the dependency
cd my_app
export PUB_HOSTED_URL=https://pub.flutter-io.cn
export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn
flutter pub get

## on mac, open a simulator
open -a Simulator

## run the flutter application
flutter run
#+end_src

** flutter widget key functions
#+begin_src dart
Widget.build/1 function will build the UI.
setState/1 function will rebuild the UI.
createState/0 function will create the State.
initState/0 function will init the State.
#+end_src

** flutter run enable-experiment=record
#+begin_src sh
flutter run --enable-experiment=records
#+end_src


** flutter tutorial
[[https://www.darttutorial.org/flutter-tutorial/][Flutter Tutorial]]

** Fix "SocketException: Connection failed (Operation not permitted)" with Flutter on macOS

add macos support

#+begin_src sh
cd flutter_project_directory
flutter create --platforms macos .
#+end_src

Client networking entitlements on macOS
#+begin_src sh
## vim macos/Runner/DebugProfile.entitlements

<key>com.apple.security.network.client</key>
<true/>
#+end_src

and the macos/Runner/Release.entitlements

#+begin_src sh
## vim macos/Runner/Release.entitlements

<key>com.apple.security.network.client</key>
<true/>
#+end_src

** set android-studio directory
#+begin_src sh
flutter config --android-studio-dir /Applications/Android\ Studio.app
#+end_src

** set remote git url
#+begin_src shell
absolute_path=$(readlink -f `which flutter`)
flutter_dir=$(dirname $(dirname $absolute_path))
cd $flutter_dir
git remote set-url origin https://gitee.com/mirrors/Flutter
#+end_src
