* dart interface example

** implement interface

#+begin_src dart :results output
abstract class Logger {
  void log(String message);
}

class ConsoleLogger implements Logger {
  @override
  void log(String message) {
    print('Log "$message" to the console.');
  }
}

class FileLogger implements Logger {
  @override
  void log(Pattern message) {
    print('Log "$message" to a file.');
  }
}

class App {
  Logger? logger;
  App({this.logger});

  void run() {
    logger?.log("App is starting...");
  }
}

void main() {
  // can use configuration file to select
  // kind of loggger to use
  var app = App(logger: FileLogger());
  app.run();
}
#+end_src

#+RESULTS:
: Log "App is starting..." to a file.

** Implementing multiple interfaces

#+begin_src dart :results output
import 'dart:io';

abstract class Reader {
  String? read();
}

abstract class Writter {
  void write(String message);
}

class Console implements Reader, Writter {
  @override
  String? read() {
    print("Enter a string:");
    // return stdin.readLineSync();
    return "hello world";
  }

  @override
  void write(String message) {
    print(message);
  }
}

void main() {
  var console = Console();
  String? input = console.read();
  if (input != null) {
    console.write(input);
  }
}
#+end_src

#+RESULTS:
: Enter a string:
: hello world

copy from [[https://www.darttutorial.org/dart-tutorial/dart-interface/][Dart Interface]]


** mixin example

#+begin_src dart :results output
class Car {
  void accelerate(){
    print("simple acceleration");
  }

  void brakes(){
    print("simple brakes");
  }
}
mixin EuroVICar {
 void emission(){
    print("euro vi standard emission");
  }
}
// mixin using class keyword
class Autonomus {
  // don't declare a constructor if you want to use this
  // class as a mixin type
  void autonomusDrive(){
    print("autonomus drive capable");
  }

}
// This class is using two mixins
class Toyota with EuroVICar, Autonomus implements Car  {
void brakes(){
    print("toyota disk brakes");
  }

  void accelerate(){
    print("toyota power acceleration");
  }
}
void main(){
  Toyota toyota = new Toyota();
  toyota.accelerate();
  toyota.brakes();
  toyota.emission();
  toyota.autonomusDrive();
}
#+end_src

#+RESULTS:
: toyota power acceleration
: toyota disk brakes
: euro vi standard emission
: autonomus drive capable

copy from [[https://medium.com/learn-dart/dart-tutorial-inheritance-using-class-interfaces-and-mixin-7fc6774ed6bd][Dart Tutorial - Inheritance using class, interfaces and mixin]]
