* unreal engine learning
:PROPERTIES:
:CUSTOM_ID: unreal-engine-learning
:END:
[[https://github.com/botman99/ue4-xcode-vscode-mac][ue4-xcode-vscode-mac]]

** GenerateProjectFiles.sh

#+begin_src sh
cd /Users/Shared/Epic\ Games/UE_5.2/Engine/Build/BatchFiles/Mac

./GenerateProjectFiles.sh -project="/Users/gerald/Documents/Unreal Projects/a1/a1.uproject" -game -vscode

#+end_src

copy from [[https://medium.com/techiepedia/setting-up-unreal-engine-m1-macbook-for-c-game-development-eb40c12237d1][Setting up Unreal engine in M1 Mac for C++ game development]]


** using ue4 tool

#+begin_src sh
pip install ue4cli
ue4 setroot /Users/Shared/Epic\ Games/UE_5.2

# add below into ~/.zshrc
# Expand ue4cli
ue() {
  ue4cli=/usr/local/bin/ue4
  engine_path=$($ue4cli root)

  # cd to ue location
  if [[ "$1" == "engine" ]]; then
    cd $engine_path
    # combine clean and build in one command
  elif [[ "$1" == "rebuild" ]]; then
    $ue4cli clean
    $ue4cli build
    if [[ "$2" == "run" ]]; then
      $ue4cli run
    fi
    # build and optionally run while respecting build flags
  elif [[ "$1" == "build" ]]; then
    if [[ "${@: -1}" == "run" ]]; then
      length="$(($# - 2))" # Get length without last param because of 'run'
      $ue4cli build ${@:2:$length}
      $ue4cli run
    else
      shift 1
      $ue4cli build "$@"
    fi
    # Run project files generation, create a symlink for the compile database and fix-up the compile database
  elif [[ "$1" == "gen" ]]; then
    $ue4cli gen
    project=${PWD##*/}
    cat ".vscode/compileCommands_${project}.json" | python3 -c 'import json,sys
j = json.load(sys.stdin)
for o in j:
  file = o["file"]
  arg = o["arguments"][1]
  o["arguments"] = ["clang++ -std=c++20 -ferror-limit=0 -Wall -Wextra -Wpedantic -Wshadow-all -Wno-unused-parameter \"" + file + "\" \"" + arg + "\""]
print(json.dumps(j, indent=2))' > compile_commands.json
    # Pass through all other commands to ue4
  else
    $ue4cli "$@"
  fi
}

alias ue4='echo Please use ue instead.'
alias ue5='echo Please use ue instead.'
#+end_src

command usage:

#+begin_src sh
ue4 editor

cd /path/to/project
ue4 run

ue4 build

ue4 gen
#+end_src

gen compile_commands.json
#+begin_src sh
ue gen
#+end_src

copy from [[https://neunerdhausen.de/posts/unreal-engine-5-with-vim/][Unreal Engine 5 with Vim or Emacs on Linux]]
