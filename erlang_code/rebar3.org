* rebar3
:PROPERTIES:
:CUSTOM_ID: rebar3
:END:
** rebar3 release usage
:PROPERTIES:
:CUSTOM_ID: rebar3-release-usage
:END:
#+begin_src shell
# new a release project
rebar3 new release erl_project

cd release_project
# compile the project
rebar3 compile

# tar the project
rebar3 as prod tar

# make the release into other dir
rebar3 as prod release -o other_dir
cd other_dir

# change the config file
RELX_CONFIG_PATH="sys.config" VMARGS_PATH="vm.args" ./erl_proj console
#+end_src

** rebar3 shell in hidden mode
:PROPERTIES:
:CUSTOM_ID: rebar3-shell-in-hidden-mode
:END:
#+begin_src shell
rebar3 local install
export PATH=/home/user/.cache/rebar3/bin:$PATH
REBAR3_ERL_ARGS="-hidden" rebar3 shell --name=a@hostname --setcookie cookie
#+end_src

see [[https://github.com/erlang/rebar3/issues/1565][Would rebar3 shell
add hidden option? #1565]]

** exclude some beam
:PROPERTIES:
:CUSTOM_ID: exclude-some-beam
:END:
See [[https://github.com/erlware/relx/issues/463][Build fails with
"Duplicated modules" error]] rabbitmq-erlang-client use some module from
mochiweb with the same name, so they are =Duplicated modules=. The
rabbitmq-erlang-client has change the module in the master branch, but
not released in 3.6.*, and will release in 3.7. So now use the exclude
directive.

#+begin_example
{exclude_modules, [{App :: atom(), [Module :: atom()]}]}
#+end_example

** edoc option
:PROPERTIES:
:CUSTOM_ID: edoc-option
:END:
copy from
[[http://erlang.org/pipermail/erlang-questions/2015-October/086562.html][edoc:
error in doclet 'edoc_doclet' when using macro in -type]] add below into
rebar.config

#+begin_example
{edoc_opts, [
    {includes,["deps/gpb/include"]},
    {preprocess, true}
    ]}.
#+end_example

** rebar3 use proxy
:PROPERTIES:
:CUSTOM_ID: rebar3-use-proxy
:END:
#+begin_src shell
export http_proxy=http://127.0.0.1:8118
export https_proxy=http://127.0.0.1:8118
rebar3 update
rebar3 upgrade
#+end_src

The 8118 is set up by privoxy.

** push library to hex.pm
:PROPERTIES:
:CUSTOM_ID: push-library-to-hex.pm
:END:
copy from [[https://github.com/tsloughter/rebar3_hex][Publishing a
package]] Using the
[[https://github.com/tsloughter/rebar3_hex][rebar3_hex]]

#+begin_src shell
# add this to ~/.config/rebar3/rebar.config
echo "{plugins, [rebar3_hex]}." >> ~/.config/rebar3/rebar.config

# register the hex.pm
rebar3 hex user register

## login the hex.pm
rebar3 hex user auth

## under the project, fix the code and version info

## push
 rebar3 hex publish
#+end_src

The hex commands:

#+begin_src shell
hex config <key> [<value>]
hex cut [-i major|minor|patch]
hex docs
hex info [<package> [<version>]]
hex key [remove key_name|list]
hex publish
hex owners [add <package> <email>|remove <package> <email>|list <package>]
hex user [register|whoami|auth|deauth|reset_password]
hex search <term>
#+end_src

copy from [[https://github.com/tsloughter/rebar3_hex][rebar3_hex]]

** releases
:PROPERTIES:
:CUSTOM_ID: releases
:END:
see the manual
[[https://stackoverflow.com/questions/36196148/elixir-how-can-i-leverage-release-handler][Elixir:
how can I leverage release_handler?]]

** rebar3_gpb_plugin
:PROPERTIES:
:CUSTOM_ID: rebar3_gpb_plugin
:END:
if the project is a =app= rebar3 project type, just add all the options
into the rebar.config. But if the project is =release=, another rebar3
project type, just move all the option into the
=apps/project_name/rebar.config=, only add this plugin into the
rebar.config right under the project. See the examples in the plugin,
they demonstrates it.

** rebar3 mirror repo
:PROPERTIES:
:CUSTOM_ID: rebar3-mirror-repo
:END:
The official mirror repo is https://repo.hex.pm , but this can be
changed by setting the =HEX_CDN= and =HEX_MIRROR= environment variable.

#+begin_src shell
export HEX_CDN=https://hexpm.upyun.com
export HEX_MIRROR=https://hexpm.upyun.com

mkdir -p ~/.config/rebar3
echo '{rebar_packages_cdn, "https://hexpm.upyun.com"}.' >> ~/.config/rebar3/rebar.config
#+end_src

Or run command like this:

#+begin_src shell
HEX_MIRROR=https://hexpm.upyun.com rebar3 compile
#+end_src

** rebar3 umbrella project
:PROPERTIES:
:CUSTOM_ID: rebar3-umbrella-project
:END:
#+begin_src shell
rebar3 new umbrella game
#+end_src

copy from
[[https://adoptingerlang.org/docs/development/umbrella_projects/][Multi-App
Projects]]
