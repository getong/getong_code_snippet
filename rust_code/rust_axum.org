* rust axum
:PROPERTIES:
:CUSTOM_ID: rust-axum
:END:
** handler
:PROPERTIES:
:CUSTOM_ID: handler
:END:
#+begin_src rust
pub struct Core {
    public_url: Url,
    secret_key: String,
    storage: Storage,
    client: SomeThirdPartyClient,
}

impl Core {
    pub async fn create_something(
        &self,
        new_something: NewSomething,
    ) -> Result<Something, BusinessErr> {
    ...
}
#+end_src

Core can be provided to handlers using Extension Layer mechanism like
this:

#+begin_src rust

...
let shared_core = Arc::new(core);
...
let app = Router::new()
    .route("/something", post(post_something))
    ...
    .layer(AddExtensionLayer::new(shared_core));
#+end_src

Which in a handler can be declared in parameter list using extension
extractor:

#+begin_src rust
async fn post_something(
    Extension(core): Extension<Arc<Core>>,
    Json(new_something): Json<NewSomething>,
) -> impl IntoResponse {
    core
        .create_something(new_something)
        .await
}
#+end_src

copy from [[https://stackoverflow.com/questions/69415050/how-to-design-the-test-friendly-application-with-rust-axum][How to design the test-friendly application with Rust/Axum?]]

also see [[https://github.com/launchbadge/realworld-axum-sqlx][realworld-axum-sqlx]]

** axum::handler Debugging handler type errors

#+begin_quote
For a function to be used as a handler it must implement the Handler trait. axum provides blanket implementations for functions that:

Are async fns.
Take no more than 16 arguments that all implement Send.
All except the last argument implement FromRequestParts.
The last argument implements FromRequest.
Returns something that implements IntoResponse.
If a closure is used it must implement Clone + Send and be 'static.
Returns a future that is Send. The most common way to accidentally make a future !Send is to hold a !Send type across an await.


This error doesn’t tell you why your function doesn’t implement Handler. It’s possible to improve the error with the debug_handler proc-macro from the axum-macros crate.
#+end_quote

copy from [[https://docs.rs/axum/latest/axum/handler/index.html][Module axum::handler]]
