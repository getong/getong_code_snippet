* rust dynamic call

** trait call

#+begin_src rust
struct State;

trait DynCall{
  fn call(&self, &mut State);
}

struct Data;

impl Data for DynCall{
  fn call(&self, &mut State)
}

let mut state = STate;
let data = Data;
data.run(&mut state);
#+end_src

Use _mut State_ to save state here.

Like Erlang here:

#+begin_src rust
Module::Handle(Data, State);
#+end_src

** can not String to a Type name in runtime

#+begin_quote
Generics need to be resolved at compile time.
You can have a fixed list of types, write a macro to generate all the possible function calls.
But not a runtime list.
#+end_quote

copy from [[https://users.rust-lang.org/t/can-i-convert-a-string-to-a-type-name/89671/4][Can I convert a String to a Type name?]]
